
services:
  postgres:
    image: postgres:15-alpine
    container_name: i9-feed-postgres
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=i9_feed
      - POSTGRES_USER=feed_user
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-feed_password_2025}
      - POSTGRES_INITDB_ARGS=--encoding=UTF8 --lc-collate=pt_BR.UTF-8 --lc-ctype=pt_BR.UTF-8
      - TZ=America/Sao_Paulo
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - postgres-logs:/var/log/postgresql
    networks:
      - i9-network
    labels:
      - "com.inoveon.project=i9-smart"
      - "com.inoveon.component=database"
      - "com.inoveon.service=postgres"
      - "com.inoveon.preserve=true"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U feed_user -d i9_feed"]
      interval: 10s
      timeout: 5s
      retries: 5
    command: >
      postgres
      -c shared_preload_libraries=pg_stat_statements
      -c pg_stat_statements.track=all
      -c max_connections=200
      -c shared_buffers=256MB
      -c effective_cache_size=1GB
      -c maintenance_work_mem=64MB
      -c checkpoint_completion_target=0.9
      -c wal_buffers=16MB
      -c default_statistics_target=100

  i9-feed-api:
    image: i9-feed-api:${VERSION:-production}
    container_name: i9-feed-api
    restart: unless-stopped
    ports:
      - "${APP_PORT:-8000}:8000"
    environment:
      - TZ=America/Sao_Paulo
      - ENVIRONMENT=production
      # Database - PostgreSQL container (hostname será resolvido automaticamente)
      - DATABASE_URL=postgresql://feed_user:${POSTGRES_PASSWORD:-feed_password_2025}@postgres:5432/i9_feed
      # Redis - Redis container
      - REDIS_URL=redis://redis:6379/0
      # JWT
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - JWT_ALGORITHM=${JWT_ALGORITHM:-HS256}
      - JWT_EXPIRATION_MINUTES=${JWT_EXPIRATION_MINUTES:-1440}
      # API Keys
      - API_KEY_TABLETS=${API_KEY_TABLETS}
      # Application
      - APP_NAME=${APP_NAME:-i9 Smart Feed API}
      - APP_VERSION=${APP_VERSION:-1.0.0}
      - DEBUG=false
      - SECRET_KEY=${SECRET_KEY}
      # CORS
      - CORS_ORIGINS=${CORS_ORIGINS:-https://feed.i9smart.com.br}
      # MinIO/S3 - Local container
      - MINIO_ENDPOINT=${MINIO_ENDPOINT:-minio:9000}
      - MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY}
      - MINIO_SECRET_KEY=${MINIO_SECRET_KEY}
      - MINIO_BUCKET=${MINIO_BUCKET:-feed-images}
      - MINIO_SECURE=${MINIO_SECURE:-false}
      # Upload limits
      - MAX_UPLOAD_SIZE=${MAX_UPLOAD_SIZE:-10485760}
      - ALLOWED_EXTENSIONS=${ALLOWED_EXTENSIONS:-jpg,jpeg,png,webp}
      # Feed configuration
      - MAX_IMAGES_PER_FEED=${MAX_IMAGES_PER_FEED:-50}
      - DEFAULT_DISPLAY_TIME=${DEFAULT_DISPLAY_TIME:-5000}
      - MIN_DISPLAY_TIME=${MIN_DISPLAY_TIME:-1000}
      - MAX_DISPLAY_TIME=${MAX_DISPLAY_TIME:-60000}
    volumes:
      # VOLUMES PERSISTENTES - NÃO SOBRESCREVER NO DEPLOY
      - feed-static:/app/static
      - feed-uploads:/app/uploads
      - feed-media:/app/media
      - feed-logs:/app/logs
    networks:
      - i9-network
    labels:
      - "com.inoveon.project=i9-smart"
      - "com.inoveon.component=api"
      - "com.inoveon.service=feed"
      - "com.inoveon.version=${VERSION:-production}"
      - "com.inoveon.deploy.preserve=static,uploads,media,logs"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  redis:
    image: redis:7-alpine
    container_name: i9-feed-redis
    restart: unless-stopped
    ports:
      - "${REDIS_PORT:-6379}:6379"
    environment:
      - TZ=America/Sao_Paulo
    volumes:
      - redis-data:/data
      - redis-logs:/var/log/redis
    networks:
      - i9-network
    command: redis-server --appendonly yes --appendfsync everysec --maxmemory 512mb --maxmemory-policy allkeys-lru
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    labels:
      - "com.inoveon.project=i9-smart"
      - "com.inoveon.component=cache"
      - "com.inoveon.service=redis"

  # MinIO para storage de arquivos (opcional - pode usar S3 externo)
  minio:
    image: minio/minio:latest
    container_name: i9-feed-minio
    restart: unless-stopped
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=${MINIO_ACCESS_KEY:-feed_minio_user}
      - MINIO_ROOT_PASSWORD=${MINIO_SECRET_KEY:-feed_minio_password_2025}
      - TZ=America/Sao_Paulo
    volumes:
      - minio-data:/data
    networks:
      - i9-network
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    labels:
      - "com.inoveon.project=i9-smart"
      - "com.inoveon.component=storage"
      - "com.inoveon.service=minio"

networks:
  i9-network:
    name: i9-smart-feed-network-prod
    external: true

volumes:
  # VOLUMES PERSISTENTES - PRESERVADOS ENTRE DEPLOYS
  postgres-data:
    driver: local
    labels:
      - "com.inoveon.preserve=true"
      - "com.inoveon.backup=daily"
      - "com.inoveon.critical=true"
  
  postgres-logs:
    driver: local
    labels:
      - "com.inoveon.preserve=true"
      - "com.inoveon.backup=weekly"
  
  feed-static:
    driver: local
    labels:
      - "com.inoveon.preserve=true"
      - "com.inoveon.backup=daily"
  
  feed-uploads:
    driver: local
    labels:
      - "com.inoveon.preserve=true"
      - "com.inoveon.backup=daily"
      - "com.inoveon.critical=true"
  
  feed-media:
    driver: local
    labels:
      - "com.inoveon.preserve=true"
      - "com.inoveon.backup=daily"
      - "com.inoveon.critical=true"
  
  feed-logs:
    driver: local
    labels:
      - "com.inoveon.preserve=true"
      - "com.inoveon.backup=weekly"
  
  redis-data:
    driver: local
    labels:
      - "com.inoveon.preserve=true"
      - "com.inoveon.backup=daily"
  
  redis-logs:
    driver: local
    labels:
      - "com.inoveon.preserve=true"
      - "com.inoveon.backup=weekly"
  
  minio-data:
    driver: local
    labels:
      - "com.inoveon.preserve=true"
      - "com.inoveon.backup=daily"
      - "com.inoveon.critical=true"