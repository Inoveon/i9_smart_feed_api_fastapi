"""Add user management fields

Revision ID: fc2d74b22a50
Revises: 1c5791e05eea
Create Date: 2025-09-29 21:04:17.490309

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'fc2d74b22a50'
down_revision = '1c5791e05eea'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Adicionar novos campos
    op.add_column('users', sa.Column('last_login', sa.DateTime(timezone=True), nullable=True))
    op.add_column('users', sa.Column('created_by', sa.UUID(), nullable=True))
    
    # Atualizar campos existentes
    op.alter_column('users', 'username',
               existing_type=sa.VARCHAR(length=100),
               type_=sa.String(length=50),
               existing_nullable=False)
    op.alter_column('users', 'role',
               existing_type=postgresql.ENUM('admin', 'editor', 'viewer', name='userrole'),
               nullable=False)
    op.alter_column('users', 'is_active',
               existing_type=sa.BOOLEAN(),
               nullable=False,
               existing_server_default=sa.text('true'))
    op.alter_column('users', 'is_verified',
               existing_type=sa.BOOLEAN(),
               nullable=False,
               existing_server_default=sa.text('false'))
    
    # Recriar constraint e indices
    op.drop_constraint('uq_users_username', 'users', type_='unique')
    op.create_index(op.f('ix_users_is_active'), 'users', ['is_active'], unique=False)
    op.create_index(op.f('ix_users_role'), 'users', ['role'], unique=False)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_foreign_key(None, 'users', 'users', ['created_by'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Remover foreign key e índices
    op.drop_constraint(None, 'users', type_='foreignkey')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_role'), table_name='users')
    op.drop_index(op.f('ix_users_is_active'), table_name='users')
    op.create_unique_constraint('uq_users_username', 'users', ['username'])
    
    # Reverter alterações nos campos
    op.alter_column('users', 'is_verified',
               existing_type=sa.BOOLEAN(),
               nullable=True,
               existing_server_default=sa.text('false'))
    op.alter_column('users', 'is_active',
               existing_type=sa.BOOLEAN(),
               nullable=True,
               existing_server_default=sa.text('true'))
    op.alter_column('users', 'role',
               existing_type=postgresql.ENUM('admin', 'editor', 'viewer', name='userrole'),
               nullable=True)
    op.alter_column('users', 'username',
               existing_type=sa.String(length=50),
               type_=sa.VARCHAR(length=100),
               existing_nullable=False)
    
    # Remover novos campos
    op.drop_column('users', 'created_by')
    op.drop_column('users', 'last_login')
    # ### end Alembic commands ###